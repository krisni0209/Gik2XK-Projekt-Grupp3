#!/usr/bin/env node

import http from "http";
import app from "../app.js";
import debugLib from "debug";
import { sequelize } from "../models/index.js";

const debug = debugLib("server:server");
const port = normalizePort(process.env.PORT || "5001");
app.set("port", port);

const server = http.createServer(app);

sequelize
  .sync()
  .then(() => {
    server.listen(port, () => {
      console.log(`✅ Servern körs på http://localhost:${port}`);
    });
  })
  .catch((e) => {
    console.error("❌ Databasanslutning misslyckades:", e);
  });

server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

function onError(error) {
  if (error.syscall !== "listen") throw error;

  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  switch (error.code) {
    case "EACCES":
      console.error(`${bind} kräver högre behörighet`);
      process.exit(1);
    case "EADDRINUSE":
      console.error(`${bind} används redan`);
      process.exit(1);
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Lyssnar på " + bind);
}
